name: Ruby CI/CD

on:
  pull_request:
    branches: [ master, main ]
  push:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: bank_accounting_test
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4.5'
        bundler-cache: true

    - name: Install PostgreSQL client
      run: sudo apt-get update && sudo apt-get install -y libpq-dev

    - name: Setup test database
      env:
        RAILS_ENV: test
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/bank_accounting_test
      run: |
        cp config/database.yml config/database.yml.backup
        cat > config/database.yml << EOF
        test:
          adapter: postgresql
          encoding: unicode
          pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
          host: localhost
          username: postgres
          password: postgres
          database: bank_accounting_test
        EOF

    - name: Setup database
      env:
        RAILS_ENV: test
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/bank_accounting_test
      run: |
        bundle exec rails db:create db:schema:load

    - name: Run RuboCop
      run: bundle exec rubocop --parallel

    - name: Run Brakeman security check
      run: bundle exec brakeman --no-progress --quiet

    - name: Run tests
      env:
        RAILS_ENV: test
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/bank_accounting_test
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: bundle exec rspec --format progress

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/.resultset.json

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4.5'
        bundler-cache: true

    - name: Run bundle audit
      run: bundle exec bundle-audit check --update
